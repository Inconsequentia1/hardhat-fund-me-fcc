{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__CallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__InsufficientFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd56be1249571d3de3507922fc54136406c1d979c241dd78ec6958dc89bb00fca",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1009407",
    "logsBloom": "0x
    "blockHash": "0xdc1f504fbffe13f89a248d0d6052e3c6935ea00af1e729cd4afc866cea1917d8",
    "transactionHash": "0xd56be1249571d3de3507922fc54136406c1d979c241dd78ec6958dc89bb00fca",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1009407",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "764fbb347736550fcfa622b0ee6addad",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Caleb Naugle\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\nerror FundMe__InsufficientFunds();\\nerror FundMe__CallFailed();\\n\\n/** @title A contract for crowdfunding\\n *   @author Caleb Naugle\\n *   @notice This contract is to demo a sample funding contract\\n *   @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     *   @notice This function funds this contract\\n     *   @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        // require(\\n        //     msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n        //     \\\"You need to spend more ETH!\\\"\\n        // );\\n        if (msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD) {\\n            revert FundMe__InsufficientFunds();\\n        }\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        // require(callSuccess, \\\"Call failed\\\");\\n        if (!callSuccess) {\\n            revert FundMe__CallFailed();\\n        }\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        // require(success);\\n        if (!success) {\\n            revert FundMe__CallFailed();\\n        }\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x51b0b72884733c95299d339ee40bf08fcc3ba9aa3bba596f2b2e7bbddfe23f7a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb08cacff685ac548200bfc09092c746b3ed461289fdda7f570ec61a02f35dc87\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200126a3803806200126a833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110e46200018660003960008181610388015281816105ce0152818161061e015261081401526110e46000f3fe60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e8146101405780639e87a5cd1461016b578063b60d428814610196578063be2693f0146101a0578063d7b4750c146101aa57610099565b80630343fb25146100a35780630ec3b027146100e05780633ccfd60b1461010b5780636b69a5921461011557610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b05565b610318565b6040516100d79190610b4b565b60405180910390f35b3480156100ec57600080fd5b506100f5610360565b6040516101029190610bc5565b60405180910390f35b610113610386565b005b34801561012157600080fd5b5061012a6105bd565b6040516101379190610b4b565b60405180910390f35b34801561014c57600080fd5b506101556105ca565b6040516101629190610bef565b60405180910390f35b34801561017757600080fd5b506101806105f2565b60405161018d9190610bc5565b60405180910390f35b61019e6101e7565b005b6101a861061c565b005b3480156101b657600080fd5b506101d160048036038101906101cc9190610c36565b6108d7565b6040516101de9190610bef565b60405180910390f35b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461091f90919063ffffffff16565b101561025e576040517f7c82983800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ac9190610c92565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104b65760006001828154811061043157610430610ce8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104ae90610d17565b91505061040e565b50600067ffffffffffffffff8111156104d2576104d1610d60565b5b6040519080825280602002602001820160405280156105005781602001602082028036833780820191505090505b50600190805190602001906105169291906109fb565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053d90610dc0565b60006040518083038185875af1925050503d806000811461057a576040519150601f19603f3d011682016040523d82523d6000602084013e61057f565b606091505b50509050806105ba576040517fa6139a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561072557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106db575b5050505050905060005b81518110156107af57600082828151811061074d5761074c610ce8565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a790610d17565b91505061072f565b50600067ffffffffffffffff8111156107cb576107ca610d60565b5b6040519080825280602002602001820160405280156107f95781602001602082028036833780820191505090505b506001908051906020019061080f9291906109fb565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085690610dc0565b60006040518083038185875af1925050503d8060008114610893576040519150601f19603f3d011682016040523d82523d6000602084013e610898565b606091505b50509050806108d3576040517fa6139a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000600182815481106108ed576108ec610ce8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061092b8361095b565b90506000670de0b6b3a764000085836109449190610dd5565b61094e9190610e5e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109a457600080fd5b505afa1580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc9190610f1c565b5050509150506402540be400816109f39190610f97565b915050919050565b828054828255906000526020600020908101928215610a74579160200282015b82811115610a735782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a1b565b5b509050610a819190610a85565b5090565b5b80821115610a9e576000816000905550600101610a86565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ad282610aa7565b9050919050565b610ae281610ac7565b8114610aed57600080fd5b50565b600081359050610aff81610ad9565b92915050565b600060208284031215610b1b57610b1a610aa2565b5b6000610b2984828501610af0565b91505092915050565b6000819050919050565b610b4581610b32565b82525050565b6000602082019050610b606000830184610b3c565b92915050565b6000819050919050565b6000610b8b610b86610b8184610aa7565b610b66565b610aa7565b9050919050565b6000610b9d82610b70565b9050919050565b6000610baf82610b92565b9050919050565b610bbf81610ba4565b82525050565b6000602082019050610bda6000830184610bb6565b92915050565b610be981610ac7565b82525050565b6000602082019050610c046000830184610be0565b92915050565b610c1381610b32565b8114610c1e57600080fd5b50565b600081359050610c3081610c0a565b92915050565b600060208284031215610c4c57610c4b610aa2565b5b6000610c5a84828501610c21565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9d82610b32565b9150610ca883610b32565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cdd57610cdc610c63565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d2282610b32565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d5557610d54610c63565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610daa600083610d8f565b9150610db582610d9a565b600082019050919050565b6000610dcb82610d9d565b9150819050919050565b6000610de082610b32565b9150610deb83610b32565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e2457610e23610c63565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6982610b32565b9150610e7483610b32565b925082610e8457610e83610e2f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eae81610e8f565b8114610eb957600080fd5b50565b600081519050610ecb81610ea5565b92915050565b6000819050919050565b610ee481610ed1565b8114610eef57600080fd5b50565b600081519050610f0181610edb565b92915050565b600081519050610f1681610c0a565b92915050565b600080600080600060a08688031215610f3857610f37610aa2565b5b6000610f4688828901610ebc565b9550506020610f5788828901610ef2565b9450506040610f6888828901610f07565b9350506060610f7988828901610f07565b9250506080610f8a88828901610ebc565b9150509295509295909350565b6000610fa282610ed1565b9150610fad83610ed1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fec57610feb610c63565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561102957611028610c63565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561106657611065610c63565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110a3576110a2610c63565b5b82820290509291505056fea2646970667358221220ed8aa16d0053424fe5d59718c0319fc01cb3d39fdcb2842f2075c4ffa988445c64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e8146101405780639e87a5cd1461016b578063b60d428814610196578063be2693f0146101a0578063d7b4750c146101aa57610099565b80630343fb25146100a35780630ec3b027146100e05780633ccfd60b1461010b5780636b69a5921461011557610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b05565b610318565b6040516100d79190610b4b565b60405180910390f35b3480156100ec57600080fd5b506100f5610360565b6040516101029190610bc5565b60405180910390f35b610113610386565b005b34801561012157600080fd5b5061012a6105bd565b6040516101379190610b4b565b60405180910390f35b34801561014c57600080fd5b506101556105ca565b6040516101629190610bef565b60405180910390f35b34801561017757600080fd5b506101806105f2565b60405161018d9190610bc5565b60405180910390f35b61019e6101e7565b005b6101a861061c565b005b3480156101b657600080fd5b506101d160048036038101906101cc9190610c36565b6108d7565b6040516101de9190610bef565b60405180910390f35b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461091f90919063ffffffff16565b101561025e576040517f7c82983800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ac9190610c92565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104b65760006001828154811061043157610430610ce8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104ae90610d17565b91505061040e565b50600067ffffffffffffffff8111156104d2576104d1610d60565b5b6040519080825280602002602001820160405280156105005781602001602082028036833780820191505090505b50600190805190602001906105169291906109fb565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053d90610dc0565b60006040518083038185875af1925050503d806000811461057a576040519150601f19603f3d011682016040523d82523d6000602084013e61057f565b606091505b50509050806105ba576040517fa6139a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561072557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106db575b5050505050905060005b81518110156107af57600082828151811061074d5761074c610ce8565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a790610d17565b91505061072f565b50600067ffffffffffffffff8111156107cb576107ca610d60565b5b6040519080825280602002602001820160405280156107f95781602001602082028036833780820191505090505b506001908051906020019061080f9291906109fb565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085690610dc0565b60006040518083038185875af1925050503d8060008114610893576040519150601f19603f3d011682016040523d82523d6000602084013e610898565b606091505b50509050806108d3576040517fa6139a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000600182815481106108ed576108ec610ce8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061092b8361095b565b90506000670de0b6b3a764000085836109449190610dd5565b61094e9190610e5e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109a457600080fd5b505afa1580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc9190610f1c565b5050509150506402540be400816109f39190610f97565b915050919050565b828054828255906000526020600020908101928215610a74579160200282015b82811115610a735782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a1b565b5b509050610a819190610a85565b5090565b5b80821115610a9e576000816000905550600101610a86565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ad282610aa7565b9050919050565b610ae281610ac7565b8114610aed57600080fd5b50565b600081359050610aff81610ad9565b92915050565b600060208284031215610b1b57610b1a610aa2565b5b6000610b2984828501610af0565b91505092915050565b6000819050919050565b610b4581610b32565b82525050565b6000602082019050610b606000830184610b3c565b92915050565b6000819050919050565b6000610b8b610b86610b8184610aa7565b610b66565b610aa7565b9050919050565b6000610b9d82610b70565b9050919050565b6000610baf82610b92565b9050919050565b610bbf81610ba4565b82525050565b6000602082019050610bda6000830184610bb6565b92915050565b610be981610ac7565b82525050565b6000602082019050610c046000830184610be0565b92915050565b610c1381610b32565b8114610c1e57600080fd5b50565b600081359050610c3081610c0a565b92915050565b600060208284031215610c4c57610c4b610aa2565b5b6000610c5a84828501610c21565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9d82610b32565b9150610ca883610b32565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cdd57610cdc610c63565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d2282610b32565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d5557610d54610c63565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610daa600083610d8f565b9150610db582610d9a565b600082019050919050565b6000610dcb82610d9d565b9150819050919050565b6000610de082610b32565b9150610deb83610b32565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e2457610e23610c63565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6982610b32565b9150610e7483610b32565b925082610e8457610e83610e2f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eae81610e8f565b8114610eb957600080fd5b50565b600081519050610ecb81610ea5565b92915050565b6000819050919050565b610ee481610ed1565b8114610eef57600080fd5b50565b600081519050610f0181610edb565b92915050565b600081519050610f1681610c0a565b92915050565b600080600080600060a08688031215610f3857610f37610aa2565b5b6000610f4688828901610ebc565b9550506020610f5788828901610ef2565b9450506040610f6888828901610f07565b9350506060610f7988828901610f07565b9250506080610f8a88828901610ebc565b9150509295509295909350565b6000610fa282610ed1565b9150610fad83610ed1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fec57610feb610c63565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561102957611028610c63565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561106657611065610c63565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110a3576110a2610c63565b5b82820290509291505056fea2646970667358221220ed8aa16d0053424fe5d59718c0319fc01cb3d39fdcb2842f2075c4ffa988445c64736f6c63430008080033",
  "devdoc": {
    "author": "Caleb Naugle",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowdfunding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 78,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}